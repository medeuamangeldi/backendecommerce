# docker-compose.yml
version: '3.8'

services:
  postgres:
    image: postgres:13.5
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=median-db
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - nesjs-network
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nest-docker
    ports:
      - '3000:3000'
    depends_on:
      - postgres
    volumes:
      - ./app:/usr/src/app
      - /usr/src/app/node_modules
      - /app/prisma
    networks:
      - nesjs-network
    restart: unless-stopped
    environment:
      - DATABASE_HOST=postgres  # Use the service name for the hostname
      - DATABASE_PORT=5432
      - DATABASE_USER=user
      - DATABASE_PASSWORD=password
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /tmp/acme-challenge:/tmp/acme-challenge
    environment:
      - NGINX_PORT=80
      - BACKEND_PORT=3000
    ports:
      - 80:80
    depends_on:
      - app
      - postgres
    networks:
      - nesjs-network
  letsencrypt:
    container_name: certbot
    image: certbot/certbot
    command: sh -c "certbot certonly --webroot -w /tmp/acme-challenge/ -d iris-zoloto.kz --text --agree-tos --email medcod49@gmail.com --rsa-key-size 4096 --verbose --keep-until-expiring --preferred-challenges=http"
    entrypoint: ""
    volumes:
      - "/etc/letsencrypt:/etc/letsencrypt"
      - "/tmp/acme-challenge:/tmp/acme-challenge"
    environment:
      - TERM=xterm
    networks:
      - nesjs-network
  minio:
    image: docker.io/bitnami/minio:2022
    environment:
      MINIO_ROOT_USER: iris
      MINIO_ROOT_PASSWORD: supersecretiris
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - 'minio_data:/data'
    networks:
      - nesjs-network
volumes:
  postgres:
  minio_data:
    driver: local
networks:
    nesjs-network:
      external: true